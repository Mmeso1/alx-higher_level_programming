===================
2. Divide a matrix
===================

Import the module
-----------------
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Function
--------
The function divides all elemnts of a matrix

Operations:
===========
 * matrix must be a list of lists of integers or floats,
   otherwise raise a TypeError exception with the message
   'matrix must be a matrix (list of lists) of integers/floats'.

 * Each row of the matrix must be of the same size, 
   otherwise raise a TypeError exception with the message
   'Each row of the matrix must have the same size'.

 * div must be a number (integer or float), 
   otherwise raise a TypeError exception with the message
   'div must be a number'.

 * div canâ€™t be equal to 0, otherwise raise a ZeroDivisionError
   exception with the message 'division by zero'.

 * All elements of the matrix should be divided by div, 
   rounded to 2 decimal places.


   Tests
===========

Normal Use
----------

0.When the args are normal ints/floats
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

1. When the div value is negative
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, -2)
	[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

2. When the value of div is float(inf)
	>>> matrix_divided(matrix, float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Errors
------

0. When the matrix value is not a list
	>>> matrix = 5
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 15, in matrix_divided
	    raise TypeError(
	TypeError: matrix must be a matrix (list of lists) of integers/floats

1. When the matrix is not of equal size
	>>> matrix = [[1, 2, 3], [4, 5]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 25, in matrix_divided
	    raise TypeError('Each row of the matrix must have the same size')
	TypeError: Each row of the matrix must have the same size

2. If the div value is a non int/float e.g string
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 'string')
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 11, in matrix_divided
	    raise TypeError('div must be a number')
	TypeError: div must be a number

3. When the content of matrix is not only int/float
	>>> matrix = [[1, 2, 3], [4, 'five', 6]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 30, in matrix_divided
	    raise TypeError(
	TypeError: matrix must be a matrix (list of lists) of integers/floats

4. When the div value is 0
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 13, in matrix_divided
	    raise ZeroDivisionError('division by zero')
	ZeroDivisionError: division by zero

5. When either of the value is provided eg. matrix
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix)
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

6. When none of the value is provided
	>>> matrix_divided()
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

7. When the value of div is float(int)
	>>> matrix_divided(matrix, float(int))
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	TypeError: float() argument must be a string or a number, not 'type'

8. When the value of div is float('nan')
	>>> matrix_divided(matrix, float('nan'))
	[[nan, nan, nan], [nan, nan, nan]]
